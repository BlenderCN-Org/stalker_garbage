import read_block, hom_format, struct, import_homdef hom_data_parse(data, name):    position = 0        while position < len(data):        position, block_id, block_size = read_block.read_block(position, data)                if block_id == hom_format.VERSION[0]:            # print(hom_format.VERSION[1], 'BLOCK')            version = struct.unpack('i', data[position : position + block_size])[0]            position += block_size            # print('  version =', version)        elif block_id == hom_format.POLYGONS[0]:            # print(hom_format.POLYGONS[1], 'BLOCK')            polygons_count = block_size // 40                        vertices = []            for polygon in range(polygons_count):                verts = struct.unpack('9f', data[position : position + 36])                position += 36                                flags = struct.unpack('i', data[position : position + 4])[0]                position += 4                                vertices.append((verts[0], verts[2], verts[1]))                vertices.append((verts[3], verts[5], verts[4]))                vertices.append((verts[6], verts[8], verts[7]))        else:            print('UNKNOW BLOCK', block_id)        triangles = []    index = 0        for vertex in range(len(vertices) // 3):        triangles.append((index, index+2, index+1))        index += 3        import_hom.crete_mesh(name, vertices, triangles)